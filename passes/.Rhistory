dat2
library(tidyr)
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(YEAR, fill = list(count_number = 0))
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(Region, fill = list(count_number = 0))
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR) %>% summarise(count_number = n())
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(Region) %>% summarise(count_number = n())
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(Region,YEAR) %>% summarise(count_number = n())
dat2
dat2 %>% filter(Region==1)
dat2 %>% filter(Region==2)
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(Region) %>% summarise(count_number = n()) %>% complete(Region, YEAR, fill = list(Value = 0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(Region,YEAR) %>% summarise(count_number = n()) %>% complete(Region, YEAR, fill = list(Value = 0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(Region, YEAR, fill = list(Value = 0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(Region, fill = list(Value = 0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(YEAR, fill = list(Value = 0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) #%>% complete(YEAR, fill = list(Value = 0))
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region)
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% select(YEAR,Region)
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n())
dat2
dat2 %>% filter(YEAR==1946)
dat2 %>% filter(Region==1)
dat2 %>% filter(Region==1) %>% complete(YEAR,distinc(datasetALL$YEAR))
dat2 %>% filter(Region==1) %>% complete(YEAR,distinct(datasetALL$YEAR))
dat2 %>% filter(Region==1) %>% complete(YEAR,distinct(datasetALL$YEAR),fill=list(Value=0))
distinct(datasetALL$YEAR)
distinct(datasetALL,YEAR)
dat2 %>% filter(Region==1) %>% complete(YEAR,distinct(datasetALL,YEAR),fill=list(Value=0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>%  complete(YEAR,distinct(datasetALL,YEAR),fill=list(Value=0)) %>% summarise(count_number = n())
dat2 %>% filter(Region==1) %>% #complete(YEAR,distinct(datasetALL,YEAR),fill=list(Value=0))
)
dat2 %>% filter(Region==1) #%>% complete(YEAR,distinct(datasetALL,YEAR),fill=list(Value=0))
datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n())
datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(YEAR,Region,fill=list(Value=0))
datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% complete(YEAR,Region,fill=list(Value=0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% complete(YEAR,Region,fill=list(Value=0)) %>% group_by(YEAR,Region) %>% summarise(count_number = n())
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% complete(YEAR,Region,fill=0) %>% group_by(YEAR,Region) %>% summarise(count_number = n())
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n())
dat2
dat2 %>% complete(YEAR)
dat2 %>% complete(YEAR,Region)
dat2 %>% complete(YEAR,dat$Region,)
dat2 %>% complete(YEAR,dat$Region)
dat$Region
dat2 %>% complete(YEAR,dat$Region,fill=list(Value=0))
dat2 %>% complete(YEAR,Region,fill=list(Value=0))
dat2 %>% complete(REgion,YEAR,fill=list(Value=0))
dat2 %>% complete(Region,YEAR,fill=list(Value=0))
dat2 %>% complete(YEAR,count_number,fill=list(Value=0))
dat2 %>% complete(YEAR,Region,count_number,fill=list(Value=0))
dat2 %>% complete(YEAR,fill=list(Value=0))
dat2 %>% complete(fill=list(Value=0))
dat2 %>% complete(YEAR,fill=list(Value=0))
dat2
dat2 %>% filter(Region==1)
dat2 %>% filter(Region==1) %>% complete(YEAR,fill=list(Value=0))
dat2 %>% filter(Region==1) %>% complete(YEAR,fill=0)
dat2 %>% filter(Region==1) %>% complete(YEAR,fill=list(0))
dat2 %>% filter(Region==1) %>% complete(YEAR,fill=list(Value(0))
)
dat2 %>% filter(Region==1) %>% complete(YEAR,fill=list(Value=0))
dat2 %>% filter(Region==1)
dat2 %>% filter(Region==1) %>% select(count_number)
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region)
dat2
View(dat2)
dat2 %>% complete(YEAR,fill=list(Value=0))
dat2 %>% complete(YEAR)
dat2 %>% complete(YEAR,Region)
dat2 %>% complete(YEAR,Region,fill(YEAR))
library(tidyr)
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(YEAR,Region,fill(count_number))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(YEAR,Region,fill(count_number,0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(YEAR,Region,fill(count_number,Value=0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(c(YEAR,Region),count_number)
datasetALL = read.csv("~/Documents/Cours/ING2/ExploreData/datasetALL.csv")
View(datasetALL)
dat = data.frame(c('A','B','C','C','C'),c(1,2,3,3,4))
dat
names(dat)= c('Col','Col2')
dat
library(tidyr)
dat %>% complete(Col,fill=List(Value=0))
dat %>% complete(Col,fill=list(Value=0))
dat %>% do(complete(Col,fill=list(Value=0)))
library(dplyr)
dat %>% do(complete(Col,fill=list(Value=0)))
dat
dat %>% do(complete(Col,Col2,fill=list(Value=0)))
dat %>% do(complete(dat$Col,dat$Col2,fill=list(Value=0)))
dat %>% do(complete(dat$Col,fill=list(Value=0)))
dat = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region)
dat
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR) %>% summarise(count_number = n())
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n())
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% do(complete(YEAR,Region,fill=list(Value=0)))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% do(complete(~YEAR,Region,fill=list(Value=0)))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(YEAR,Region,fill=list(Value=0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% do %>% complete(YEAR,Region,fill=list(Value=0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n())
dat2
View(dat2)
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR) %>% summarise(count_number = n()) complete(YEAR,Region,fill=list(count_number=0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR) %>% summarise(count_number = n()) %>% complete(YEAR,Region,fill=list(count_number=0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR) %>% summarise(count_number = n()) %>% complete(YEAR,fill=list(count_number=0))
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR) %>% summarise(count_number = n()) %>% complete(YEAR,Region,fill=list(count_number=0))
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR) %>% summarise(count_number = n())
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(YEAR,Region,fill=list(count_number=0))
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(YEAR,fill=list(count_number=0))
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(YEAR,fill=list(Region,count_number=0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(Region,fill=list(count_number=0))
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>% complete(Region,YEAR,fill=list(count_number=0))
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>%  spread(Region, count, fill=0) %>% gather(Region, count, -YEAR)
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>%  spread(Region, count_number, fill=0) %>% gather(Region, count_number, -YEAR)
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>%  spread(YEAR, count_number, fill=0) %>% gather(YEAR, count_number, -Region)
dat2
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n())
dat2 %>% complete(Region, fill = list(count_number = 0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n())
dat2 %>% complete(YEAR,Region, fill = list(count_number = 0))
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>%  spread(YEAR, count_number, fill=0) %>% gather(YEAR, count_number, -Region)
dat2 %>% filter(Region==1)
dat2 %>% filter(Region==1) %>% select(count_number)
dat2 %>% filter(Region==2) %>% select(count_number)
dat2$YEAR
distinct(dat2$YEAR)
distinct(as.numeric(dat2$YEAR))
distinct(datasetALL,YEAR)
distinct(dat2,YEAR)
distinct(dat2,YEAR)$YEAR
dat2 %>% filter(Region==1) %>% select(count_number)
dat2 %>% filter(Region==1)
plot(dat2 %>% filter(Region==1) %>% select(count_number))
plot(dat2 %>% filter(Region==1) %>% select(YEAR,count_number))
dat2 %>% filter(Region==1) %>% select(YEAR)
dat2 %>% filter(Region==2) %>% select(count_number)
dat2
dat2 %>% filter(Region==2) %>% select(count_number) %>% list
a = dat2 %>% filter(Region==2) %>% select(count_number)
list(a)
as.list(a)
a = dat2 %>% filter(Region==2) %>% select(count_number) %>% as.list()
a
dat2 %>% filter(Region==2) %>% select(count_number) %>% as.list()
dat2 %>% filter(Region==2) %>% select(count_number) %>% as.list()
dat2 %>% filter(Region==1) %>% select(count_number) %>% as.list()
dat2 %>% filter(Region==3) %>% select(count_number) %>% as.list()
distinct(dat2,YEAR)$YEAR
plot(distinct(dat2,YEAR)$YEAR)
region1
region1 = dat2 %>% filter(Region==1) %>% select(count_number) %>% as.list()
region2 = dat2 %>% filter(Region==2) %>% select(count_number) %>% as.list()
region3 = dat2 %>% filter(Region==3) %>% select(count_number) %>% as.list()
region4 = dat2 %>% filter(Region==4) %>% select(count_number) %>% as.list()
region5 = dat2 %>% filter(Region==5) %>% select(count_number) %>% as.list()
region1
region2
c("1946", "1947", "1948")
c(20, 14, 23)
distinct(dat2,YEAR)$YEAR
Animals <- distinct(dat2,YEAR)$YEAR
SF_Zoo <- region1
LA_Zoo <- region2
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
data
region1
region1 = dat2 %>% filter(Region==1) %>% select(count_number)
region2 = dat2 %>% filter(Region==2) %>% select(count_number)
region3 = dat2 %>% filter(Region==3) %>% select(count_number)
region4 = dat2 %>% filter(Region==4) %>% select(count_number)
region5 = dat2 %>% filter(Region==5) %>% select(count_number)
region1
region1$count_number
region1 = dat2 %>% filter(Region==1) %>% select(count_number)$count_number
region1 = dat2 %>% filter(Region==1) %>% select(count_number) %>% count_number
region1 = dat2 %>% filter(Region==1) %>% select(count_number) %>% $count_number
dat2 %>% filter(Region==1) %>% dat2$count_number
dat2 %>% filter(Region==1) %>% count_number
dat2 %>% filter(Region==1) %>% select(count_number)
dat2 %>% filter(Region==1) %>% select(count_number) %>% subset(count_number)
dat2 %>% filter(Region==1) %>% select(count_number) %>% count_number
dat2 %>% filter(Region==1) %>% select(count_number) %>% list
dat2 %>% filter(Region==1) %>% select(count_number) %>% vector
dat2 %>% filter(Region==1) %>% select(count_number) %>% array
dat2 %>% filter(Region==1) %>% select(count_number)
dat2$count_number %>% filter(Region==1) %>% select(count_number)
datasetALL %>%
group_by(YEAR,Region) %>%
summarise(count_number = n()) %>%
ungroup() %>%
complete(Year, Region, fill = list(count_number = 1))
datasetALL %>%
group_by(YEAR,Region) %>%
summarise(count_number = n()) %>%
ungroup() %>%
complete(YEAR, Region, fill = list(count_number = 1))
datasetALL %>%
group_by(YEAR,Region) %>%
summarise(count_number = n()) %>%
ungroup() %>%
complete(YEAR, Region, fill = list(count_number = 0))
dat2 = datasetALL %>%
group_by(YEAR,Region) %>%
summarise(count_number = n()) %>%
ungroup() %>%
complete(YEAR, Region, fill = list(count_number = 0))
region1 = dat2 %>% filter(Region==1) %>% select(count_number)
region2 = dat2 %>% filter(Region==2) %>% select(count_number)
region3 = dat2 %>% filter(Region==3) %>% select(count_number)
region4 = dat2 %>% filter(Region==4) %>% select(count_number)
region5 = dat2 %>% filter(Region==5) %>% select(count_number)
region2
View(region2)
View(region4)
dat2 = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(YEAR,Region) %>% summarise(count_number = n()) %>%  spread(YEAR, count_number, fill=0) %>% gather(YEAR, count_number, -Region)
region1 = dat2 %>% filter(Region==1) %>% select(count_number)
region2 = dat2 %>% filter(Region==2) %>% select(count_number)
region3 = dat2 %>% filter(Region==3) %>% select(count_number)
region4 = dat2 %>% filter(Region==4) %>% select(count_number)
region5 = dat2 %>% filter(Region==5) %>% select(count_number)
View(region4)
a = datasetALL %>% filter(Region==4)
View(a)
a = datasetALL %>% filter(Region==3)
View(a)
a = datasetALL %>% filter(Region==3 and YEAR=1990)
a = datasetALL %>% filter(Region==3,YEAR=1990)
a = datasetALL %>% filter(Region==3 & YEAR=1990)
a = datasetALL %>% filter(Region==3 && YEAR=1990)
a = datasetALL %>% filter(Region==3 | YEAR=1990)
a = datasetALL %>% filter(Region==3 | YEAR==1990)
a = datasetALL %>% filter(Region==3 and YEAR==1990)
a = datasetALL %>% filter(Region==3 & YEAR==1990)
datasetALL = read.csv("~/Documents/Cours/ING2/ExploreData/datasetALL.csv")
(dat2 %>% filter(Region==1) %>% select(count_number))$count_number
library(dplyr)
library(tidyr)
(dat2 %>% filter(Region==1) %>% select(count_number))$count_number
dat2 = datasetALL %>%
group_by(YEAR,Region) %>%
summarise(count_number = n()) %>%
ungroup() %>%
complete(YEAR, Region, fill = list(count_number = 0))
(dat2 %>% filter(Region==1) %>% select(count_number))$count_number
View(datasetALL)
dat = datasetALL %>% select(-Version.x) %>% na.omit() %>% group_by(Region) %>% summarise(avg_Radius = mean(Radius),min_Radius= min(Radius), max_Radius=max(Radius))
dat$avg_Radius
mean(dat$avg_Radius)
min(dat$avgRadius)
dat$avgRadius
library(dplyr)
library(tidyr)
datasetALL = read.csv("~/Documents/Cours/ING2/ExploreData/datasetALL.csv")
View(datasetALL)
dat3 = datasetALL %>% select(-Version.x) %>% na.omit() %>% select(YEAR,Latitude,Longitude,Radius)
dat3
dat3 = datasetALL %>% select(-Version.x) %>% na.omit() %>% select(YEAR,Latitude,Longitude,Radius)
dat3 = datasetALL %>% select(YEAR,Latitude,Longitude,Radius)
View(datasetALL)
datasetALL = read.csv("~/Documents/Cours/ING2/ExploreData/datasetALL.csv")
list(args = list('visible', rep(FALSE, 5)),
method = 'restyle')
rep(1,6)
all_dat = list()
for (i in distinct(datasetALL,YEAR)) {
all_dat[[i]]= list(visible=False,
x=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==i))
}
library(tidyr)
library(dplyr)
all_dat = list()
for (i in distinct(datasetALL,YEAR)) {
all_dat[[i]]= list(visible=False,
x=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==i))
}
all_dat = list()
for (i in distinct(datasetALL,YEAR)) {
all_dat[[i]]= list(visible=False,
x=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==i))
}
all_dat = list()
for (i in distinct(datasetALL,YEAR)) {
all_dat[[i]]= list(visible=FALSE,
x=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==i))
}
all_dat = list()
for (i in 0:length(distinct(datasetALL,YEAR))) {
all_dat[[i]]= list(visible=FALSE,
x=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==i))
}
for(i in 0:length(distinct(datasetALL,YEAR)))
)
for(i in 0:length(distinct(datasetALL,YEAR)))
i
for(i in 0:length(distinct(datasetALL,YEAR)))
print(i)
distinct(datasetALL,YEAR)
order(distinct(datasetALL,YEAR))
order(distinct(datasetALL,YEAR)$YEAR)
order(distinct(datasetALL$YEAR))
order(distinct(datasetALL$YEAR,YEAR))
order(distinct(datasetALL,YEAR))
distinct(datasetALL,YEAR)
distinct(datasetALL,YEAR)$YEAR
order(distinct(datasetALL,YEAR)$YEAR)
a=distinct(datasetALL,YEAR)$YEAR
a
order(a)
list(a)
order(list(a))
order(list(a[1
]))
a
order(na.last = )
order(a)
sort(a)
sort(distinct(datasetALL,YEAR))
sort(distinct(datasetALL,YEAR)$YEAR)
for(i in O:length(sort(distinct(datasetALL,YEAR)$YEAR)))
print(i)
for(i in 0:length(sort(distinct(datasetALL,YEAR)$YEAR)))
print(i)
for(i in sort(distinct(datasetALL,YEAR)$YEAR))
print(i)
dat3 = datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR>=2000)
all_dat=list()
for(i in sort(distinct(datasetALL,YEAR)$YEAR)){
all_dat[i]=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==i)
}
all_dat
all_dat[2005]
all_dat[2005]$Radius
datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==2005)
datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==2)
datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==2003)
all_dat[0]=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==2003)
all_dat[1]=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==2004)
all_dat[[0]]=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==2003)
all[[0]]=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==2003)
z=list()
z[0]=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==2003)
z[1]=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==2004)
z
z=list()
z[[0]]=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==2003)
z
z[[1]]=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==2003)
z[[2]]=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==2004)
z
dat3 = datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR>=2000)
all_dat=list()
for(i in sort(distinct(datasetALL,YEAR)$YEAR)){
all_dat[[i]]=datasetALL %>% select(YEAR,Latitude,Longitude,Radius,Location) %>% filter(YEAR==i)
}
all_dat
library(plotly)
x <- seq(0,10, length.out = 1000)
# create data
aval <- list()
for(step in 1:11){
aval[[step]] <-list(visible = FALSE,
name = paste0('v = ', step),
x=x,
y=sin(step*x))
}
aval[3][[1]]$visible = TRUE
# create steps and plot all traces
steps <- list()
p <- plot_ly()
for (i in 1:11) {
p <- add_lines(p,x=aval[i][[1]]$x,  y=aval[i][[1]]$y, visible = aval[i][[1]]$visible,
name = aval[i][[1]]$name, type = 'scatter', mode = 'lines', hoverinfo = 'name',
line=list(color='00CED1'), showlegend = FALSE)
step <- list(args = list('visible', rep(FALSE, length(aval))),
method = 'restyle')
step$args[[2]][i] = TRUE
steps[[i]] = step
}
# add slider control to plot
p <- p %>%
layout(sliders = list(list(active = 3,
currentvalue = list(prefix = "Frequency: "),
steps = steps)))
p
library(plotly)
x <- seq(0,10, length.out = 1000)
# create data
aval <- list()
for(step in 1:11){
aval[[step]] <-list(visible = FALSE,
name = paste0('v = ', step),
x=x,
y=sin(step*x))
}
aval[3][[1]]$visible = TRUE
# create steps and plot all traces
steps <- list()
p <- plot_ly()
for (i in 1:11) {
p <- add_lines(p,x=aval[i][[1]]$x,  y=aval[i][[1]]$y, visible = aval[i][[1]]$visible,
name = aval[i][[1]]$name, type = 'scatter', mode = 'lines', hoverinfo = 'name',
line=list(color='00CED1'), showlegend = FALSE)
step <- list(args = list('visible', rep(FALSE, length(aval))),
method = 'restyle')
step$args[[2]][i] = TRUE
steps[[i]] = step
}
# add slider control to plot
p <- p %>%
layout(xaxis=(sliders = list(list(active = 3,
currentvalue = list(prefix = "Frequency: "),
steps = steps))))
p
dat4 = datasetALL %>% select(YEAR,Region,Location) %>% filter(Region==2)
datasetALL = read.csv("~/Documents/Cours/ING2/ExploreData/datasetALL.csv")
dat4 = datasetALL %>% select(YEAR,Region,Location) %>% filter(Region==2)
dat4
dat4 = datasetALL %>% select(YEAR,Region,Location) %>% filter(Region==1)
dat4
dat4 = datasetALL %>% select(Region,Location) %>% filter(Region==1)
dat4 = datasetALL %>% select(YEAR,Region,Location) %>% filter(Region==1)
dat4
dat4 = datasetALL %>% select(YEAR,Region,Location) %>% filter(Region==1) %>% summarise(count_number = n())
dat4
dat4 = datasetALL %>% select(YEAR,Region,Location) %>% filter(Region==1) %>% group_by(Location) %>% summarise(count_number = n())
dat4
dat4 = datasetALL %>% select(YEAR,Region,Location,Radius) %>% filter(Region==1) %>% group_by(Location) %>% summarise(count= n())
dat4
a=c(1,2,3,4,5)
a
sapply(a,function(x){
return(paste(a,"er"))
})
lapply(a,function(x){
return(paste(a,"er"))
})
sapply(a,function(x){
return(paste(x,"er"))
})
sapply(a,function(x){
return(paste0(x,"er"))
})
sapply(a,function(x){
if(x<2)
return(paste0(x,"er"))
else
return(paste0(x,"ème"))
})
setwd("~/Documents/DevData/scrapeFourFourTwo")
stats <- read.csv("data/fft_scrape.csv", sep=";")
# scrapeFourfourtwo.r
library(rvest)
library(plyr)
library(stringr)
library(ggplot2)
library(ggthemes)
library(scales)
library(viridis)
library(extrafont)
library(grid)
library(gridExtra)
library(dplyr)
########################
# ATTACKING 3RD PASSES #
########################
getMean3rdPasses <- function(data,team){
home = data %>% filter(homeTeam==team) %>% select(atk3rdPassesHome) %>% sum(.)
away = data %>% filter(awayTeam==team) %>% select(atk3rdPassesAway) %>% sum(.)
return((home+away)/38)
}
df_3rdPasses=data.frame(do.call(rbind,lapply(as.character(unique(stats$homeTeam)),function(x) return(c(x,round(getMean3rdPasses(stats,x),digits=0)))))) %>% select(Team=X1,mean3rdPasses=X2) %>% mutate(Team=as.character(Team),mean3rdPasses=as.numeric(levels(mean3rdPasses))[mean3rdPasses]) %>% arrange(desc(mean3rdPasses))
color = c("#D00027","#EF0107","#5CBFEB","#034694","#DA020E","#001C58","#000000","#274488","#FFC20E","#000000","#1B458F","#E03A3E","#0053A0","#60223B","#8CCCE5","#FF7E00","#EA2D04","#FBEE23","#091453","#EA2D04")
df_3rdPasses$color = color
g = ggplot(df_3rdPasses,aes(x=Team,y=mean3rdPasses,fill=mean3rdPasses)) + geom_bar(stat="identity") +scale_fill_viridis()+ theme_hc()+ scale_x_discrete(limits=df_3rdPasses$Team) + scale_y_continuous(name="Average attacking 3rd passes",limits=c(0,200),expand=c(0,0)) + theme(text=element_text(family="Lato"),plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(),axis.ticks.x=element_blank()) + ggtitle("Attacking 3rd passes") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(legend.position="none")
g
g = ggplot(df_3rdPasses,aes(x=Team,y=mean3rdPasses,fill=mean3rdPasses)) + geom_bar(stat="identity") + theme_hc()+ scale_x_discrete(limits=df_3rdPasses$Team) + scale_y_continuous(name="Average of 3rd passes",limits=c(0,200),expand=c(0,0)) + theme(text=element_text(family="Lato"),plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(),axis.ticks.x=element_blank()) + ggtitle("Average attacking with more than 3 passes") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(legend.position="none")
g
g = ggplot(df_3rdPasses,aes(x=Team,y=mean3rdPasses,fill=mean3rdPasses)) + geom_bar(stat="identity") + scale_fill_brewer(palette="Set1")+ theme_hc()+ scale_x_discrete(limits=df_3rdPasses$Team) + scale_y_continuous(name="Average of 3rd passes",limits=c(0,200),expand=c(0,0)) + theme(text=element_text(family="Lato"),plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(),axis.ticks.x=element_blank()) + ggtitle("Average attacking with more than 3 passes") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(legend.position="none")
g
g = ggplot(df_3rdPasses,aes(x=Team,y=mean3rdPasses,fill=mean3rdPasses)) + geom_bar(stat="identity") + scale_fill_gradient(low = "#132B43", high = "#56B1F7")+ theme_hc()+ scale_x_discrete(limits=df_3rdPasses$Team) + scale_y_continuous(name="Average of 3rd passes",limits=c(0,200),expand=c(0,0)) + theme(text=element_text(family="Lato"),plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(),axis.ticks.x=element_blank()) + ggtitle("Average attacking with more than 3 passes") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(legend.position="none")
g
g = ggplot(df_3rdPasses,aes(x=Team,y=mean3rdPasses,fill=mean3rdPasses)) + geom_bar(stat="identity") + scale_fill_gradient(low = "red", high = "orange")+ theme_hc()+ scale_x_discrete(limits=df_3rdPasses$Team) + scale_y_continuous(name="Average of 3rd passes",limits=c(0,200),expand=c(0,0)) + theme(text=element_text(family="Lato"),plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(),axis.ticks.x=element_blank()) + ggtitle("Average attacking with more than 3 passes") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(legend.position="none")
g
g = ggplot(df_3rdPasses,aes(x=Team,y=mean3rdPasses,fill=mean3rdPasses)) + geom_bar(stat="identity") + scale_fill_gradient(low = "#ef5350", high = "#b71c1c")+ theme_hc()+ scale_x_discrete(limits=df_3rdPasses$Team) + scale_y_continuous(name="Average of 3rd passes",limits=c(0,200),expand=c(0,0)) + theme(text=element_text(family="Lato"),plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(),axis.ticks.x=element_blank()) + ggtitle("Average attacking with more than 3 passes") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(legend.position="none")
g
g = ggplot(df_3rdPasses,aes(x=Team,y=mean3rdPasses,fill=mean3rdPasses)) + geom_bar(stat="identity") + scale_fill_gradient(low = "#ffebee", high = "#b71c1c")+ theme_hc()+ scale_x_discrete(limits=df_3rdPasses$Team) + scale_y_continuous(name="Average of 3rd passes",limits=c(0,200),expand=c(0,0)) + theme(text=element_text(family="Lato"),plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(),axis.ticks.x=element_blank()) + ggtitle("Average attacking with more than 3 passes") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(legend.position="none")
g
g = ggplot(df_3rdPasses,aes(x=Team,y=mean3rdPasses,fill=mean3rdPasses)) + geom_bar(stat="identity") + scale_fill_gradient(low = "#ef9a9a", high = "#b71c1c")+ theme_hc()+ scale_x_discrete(limits=df_3rdPasses$Team) + scale_y_continuous(name="Average of 3rd passes",limits=c(0,200),expand=c(0,0)) + theme(text=element_text(family="Lato"),plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(),axis.ticks.x=element_blank()) + ggtitle("Average attacking with more than 3 passes") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(legend.position="none")
g
g = ggplot(df_3rdPasses,aes(x=Team,y=mean3rdPasses,fill=mean3rdPasses)) + geom_bar(stat="identity") + scale_fill_gradient(low = "#ef9a9a", high = "#b71c1c")+ theme_hc()+ scale_x_discrete(limits=df_3rdPasses$Team) + scale_y_continuous(name="Average of 3rd passes",limits=c(0,200),expand=c(0,0)) + theme(text=element_text(family="Lato"),plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(),axis.ticks.x=element_blank()) + ggtitle("Average attacking with more than 3 passes") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(legend.position="none")
g
g = ggplot(df_3rdPasses,aes(x=Team,y=mean3rdPasses,fill=mean3rdPasses)) + geom_bar(stat="identity") + scale_fill_gradient(low = "#ffebee", high = "#b71c1c")+ theme_hc()+ scale_x_discrete(limits=df_3rdPasses$Team) + scale_y_continuous(name="Average of 3rd passes",limits=c(0,200),expand=c(0,0)) + theme(text=element_text(family="Lato"),plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(),axis.ticks.x=element_blank()) + ggtitle("Average attacking with more than 3 passes") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(legend.position="none")
g
g = ggplot(df_3rdPasses,aes(x=Team,y=mean3rdPasses,fill=mean3rdPasses)) + geom_bar(stat="identity") + scale_fill_gradient(low = "#ffebee", high = "#b71c1c")+ theme_hc()+ scale_x_discrete(limits=df_3rdPasses$Team) + scale_y_continuous(name="Average of 3 passes or more",limits=c(0,200),expand=c(0,0)) + theme(text=element_text(family="Lato"),plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(),axis.ticks.x=element_blank()) + ggtitle("Average number of attack with more than 3 passes") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(legend.position="none")
g
