#custom labels
vlcex=0.8
)
legend(x=0.7, y=1, legend = rownames(data[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
typeof(data$Goal)
data$Goal
a=read.clipboard(header = T,sep="\t",dec=".")
a=read.clipboard(header = T,sep="\t",dec=",")
a
a=read.clipboard(header = T,sep="\t",dec=",")
View(a)
data=a
rownames(data)=c("Lacazette","Giroud")
data = data %>% select(-Player)
data
data
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9))
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4))
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=0.7, y=1, legend = rownames(data[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9))
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4))
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9))
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4))
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20), cglwd=0.8,
#custom labels
vlcex=0.8
)
radarchart( data  , axistype=1)
dat <- read.csv("~/Downloads/Empty google spreadsheet - Feuille 1.csv", dec=",")
View(dat)
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9))
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4))
radarchart( dat , axistype=1)
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9) , rgb(0.7,0.5,0.1,0.9) )
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4) , rgb(0.7,0.5,0.1,0.4) )
radarchart( dat  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=0.7, y=1, legend = rownames(data[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
rownames(dat)=c("Lacazette","Giroud")
dat = dat %>% select(-player)
rownames(dat)=c("Lacazette","Giroud")
dat = dat %>% select(-Player)
rownames(dat)=c("Lacazette","Giroud","max","min")
dat = dat %>% select(-Player)
radarchart( dat  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
radarchart( dat  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=0.7, y=1, legend = rownames(data[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
radarchart( dat  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=0.7, y=1, legend = rownames(dat[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
radarchart( dat  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=0.7, y=1, legend = rownames(dat[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
ownames(dat[-c(1,2),])
rownames(dat[-c(1,2),])
rownames(dat)
rownames(dat[c(1,2)])
rownames(dat[c(1,2),2])
rownames(dat[c(1,2),])
radarchart( dat  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=0.7, y=1, legend = rownames(dat[c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
dat
ozil = data.frame(club=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal"),GoalPer90=c(1*90/2268,16*90/8279,27*90/11377,32*90/13810))
View(ozil)
ozil = data.frame(club=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal"),GoalPer90=c(1*90/2268,16*90/8279,27*90/11377,32*90/13810),AssistsPer90=c(5*90/2268,54*90/8279,81*90/11377,57*90/13810))
library(tidyverse)
ggplot(data=ozil,aes(x=club)) + geom_bar()
ggplot(data=ozil,aes(x=club)) + geom_bar(aes(y=GoalPer90))
ggplot(data=ozil,aes(x=club)) + geom_bar(aes(y=GoalPer90),stat="identity")
ggplot(data=ozil,aes(x=club)) + geom_bar(stat="identity")
ggplot(data=ozil,aes(x=club)) + geom_bar(aes(y=GoalPer90),stat="identity")
ozil.dodge = fortify(ozil)
View(ozil.dodge)
ozil.dodge = melt(ozil)
library(reshape2)
ozil.dodge = melt(ozil)
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity")
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge())
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge()) + scale_x_discrete(limits=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal"))
library(hrbrthemes)
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge()) + scale_x_discrete(limits=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal")) + theme_dark()
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge()) + scale_x_discrete(limits=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal")) + theme_rc()
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge()) + scale_x_discrete(limits=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal")) + +labs(x="Matchday", y="",title="Manchester City Squad Rotation",subtitle="2016-2017 season",caption="by Benoit Pimpaud / @Ben8t",color="") + theme_ipsum_rc()
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge()) + scale_x_discrete(limits=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal")) +labs(x="", y="per 90 minutes",title="Mesut Ozil goals and assists evolution",subtitle="",caption="by Benoit Pimpaud / @Ben8t",color="") + theme_ipsum_rc()
ozil = data.frame(club=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal"),Goals=c(1*90/2268,16*90/8279,27*90/11377,32*90/13810),Assists=c(5*90/2268,54*90/8279,81*90/11377,57*90/13810))
ozil.dodge = melt(ozil)
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge()) + scale_x_discrete(limits=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal")) +labs(x="", y="per 90 minutes",title="Mesut Ozil goals and assists evolution",subtitle="",caption="by Benoit Pimpaud / @Ben8t",color="") + theme_ipsum_rc()
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge()) + scale_fill_manual(values=c("#999999", "#E69F00")) + scale_x_discrete(limits=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal")) +labs(x="", y="per 90 minutes",title="Mesut Ozil goals and assists evolution",subtitle="",caption="by Benoit Pimpaud / @Ben8t",color="") + theme_ipsum_rc()
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge()) + scale_fill_manual(values=c("#1de9b6", "#40c4ff")) + scale_x_discrete(limits=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal")) +labs(x="", y="per 90 minutes",title="Mesut Ozil goals and assists evolution",subtitle="",caption="by Benoit Pimpaud / @Ben8t",color="") + theme_ipsum_rc()
# gace_ozil.r
library(tidyverse)
library(hrbrthemes)
library(repshape2)
ozil = data.frame(club=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal"),Goals=c(1*90/2268,16*90/8279,27*90/11377,32*90/13810),Assists=c(5*90/2268,54*90/8279,81*90/11377,57*90/13810))
ozil.dodge = melt(ozil)
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge()) + scale_fill_manual(values=c("#1de9b6", "#40c4ff")) + scale_x_discrete(limits=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal")) +labs(x="", y="per 90 minutes",title="Mesut Ozil goals and assists evolution",subtitle="",caption="by Benoit Pimpaud / @Ben8t",color="") + theme_ipsum_rc()
# gace_ozil.r
library(tidyverse)
library(hrbrthemes)
library(reshape2)
ozil = data.frame(club=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal"),Goals=c(1*90/2268,16*90/8279,27*90/11377,32*90/13810),Assists=c(5*90/2268,54*90/8279,81*90/11377,57*90/13810))
ozil.dodge = melt(ozil)
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge()) + scale_fill_manual(values=c("#1de9b6", "#40c4ff")) + scale_x_discrete(limits=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal")) +labs(x="", y="per 90 minutes",title="Mesut Ozil goals and assists evolution",subtitle="",caption="by Benoit Pimpaud / @Ben8t",color="") + theme_ipsum_rc()
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge()) + scale_fill_manual(values=c("#80cbc4", "#90caf9")) + scale_x_discrete(limits=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal")) +labs(x="", y="per 90 minutes",title="Mesut Ozil goals and assists evolution",subtitle="",caption="by Benoit Pimpaud / @Ben8t",color="") + theme_ipsum_rc()
# gace_ozil.r
library(tidyverse)
library(hrbrthemes)
library(reshape2)
ozil = data.frame(club=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal"),Goals=c(1*90/2268,16*90/8279,27*90/11377,32*90/13810),Assists=c(5*90/2268,54*90/8279,81*90/11377,57*90/13810))
ozil.dodge = melt(ozil)
ggplot(data=ozil.dodge,aes(x=club)) + geom_bar(aes(y=value,fill=variable),stat="identity",position=position_dodge()) + scale_fill_manual(values=c("#1de9b6", "#40c4ff")) + scale_x_discrete(limits=c("Schalke 04","Werder Bremen","Real Madrid","Arsenal")) +labs(x="", y="per 90 minutes",title="Mesut Ozil goals and assists evolution",subtitle="",caption="by Benoit Pimpaud / @Ben8t",color="") + theme_ipsum_rc()
setwd("~/Documents/DevData/FootScrapeViz/Maps")
# map_scrape.r
# WhoScored : copy(JSON.stringify(matchCentreData));
library(tidyverse)
library(hrbrthemes)
library(jsonlite)
data = jsonlite::fromJSON("test.json")
event = data.frame(id=data$events$id,eventId=data$events$eventId,minute=data$events$minute,second=data$events$second,teamId=data$events$teamId,playerId=data$events$playerId,x=data$events$x,y=data$events$y,typeValue=data$events$type$value,typeDisplayName=data$events$type$displayName,period=data$events$period$value,isTouch=data$events$isTouch,outcome=data$events$outcomeType$value)
player= data$playerIdNameDictionary %>% t %>% as.data.frame() %>% t %>% as.data.frame() %>% tibble::rownames_to_column() %>% select(playerName=V1,playerId=rowname) %>% mutate(playerId=as.numeric(playerId),playerName=unlist(playerName))
home_lineup = data$home$formations$playerIds[[1]] %>% as.data.frame() %>% select(.,playerId=.) %>% slice(1:11)
away_lineup = data$away$formations$playerIds[[1]] %>% as.data.frame() %>% select(.,playerId=.) %>% slice(1:11)
full = left_join(event,player,by=c("playerId"))
pass = full %>% na.omit() %>% filter(typeValue==1) %>% filter(outcome==1)
touch = full %>% na.omit() %>% filter(isTouch==TRUE)
tomap = touch %>%
filter(playerId %in% away_lineup$playerId) %>%
group_by(teamId,playerName) %>%
summarise(x_avg=mean(x),y_avg=mean(y),n=n())
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
circle <- circleFun(c(50,50),20,npoints = 100)
g <- ggplot(tomap,aes(x=x_avg,y=y_avg)) +
xlim(0,100) +
ylim(0,100)+
stat_density_2d(aes(fill = ..density..),geom = "tile", contour = FALSE)+
scale_fill_gradient(low="#74c493",high="#00695c")+
geom_rect(aes(xmin = 0, xmax = 100, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 50, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 17, xmax = 0, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 83, xmax = 100, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 6, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 100, xmax = 94, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_path(data=circle,aes(x=x,y=y),colour="white",size=0.5) +
geom_point(aes(size=n),shape = 21, colour = "white", fill = "#00bfa5", stroke = 1) +
geom_text(aes(label=playerName),hjust=0, vjust=-1,colour="black") +
theme_ipsum_rc()+
theme(axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank())+
labs(x="", y="",title="Touchmap \nArsenal away at Stoke City",subtitle="Premier League - 19/08/2017",caption="Dot size : touches - Dot position : average touch position \n \n by Benoit Pimpaud / @Ben8t",color="") +theme(legend.position='none')
g
View(full)
summary(full$typeDisplayName)
a = full %>% filter(typeDisplayName=="SavedShot")
View(a)
shot = full %>% na.omit() %>% filter(typeValue==15)
View(shot)
tomap = shot %>%
filter(playerId %in% away_lineup$playerId) %>%
group_by(teamId,playerName) %>%
summarise(x_avg=mean(x),y_avg=mean(y),n=n())
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
circle <- circleFun(c(50,50),20,npoints = 100)
g <- ggplot(tomap,aes(x=x_avg,y=y_avg)) +
xlim(0,100) +
ylim(0,100)+
stat_density_2d(aes(fill = ..density..),geom = "tile", contour = FALSE)+
scale_fill_gradient(low="#74c493",high="#00695c")+
geom_rect(aes(xmin = 0, xmax = 100, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 50, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 17, xmax = 0, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 83, xmax = 100, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 6, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 100, xmax = 94, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_path(data=circle,aes(x=x,y=y),colour="white",size=0.5) +
geom_point(aes(size=n),shape = 21, colour = "white", fill = "#00bfa5", stroke = 1) +
geom_text(aes(label=playerName),hjust=0, vjust=-1,colour="black") +
theme_ipsum_rc()+
theme(axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank())+
labs(x="", y="",title="Touchmap \nArsenal away at Stoke City",subtitle="Premier League - 19/08/2017",caption="Dot size : touches - Dot position : average touch position \n \n by Benoit Pimpaud / @Ben8t",color="") +theme(legend.position='none')
g
summary(full$typeDisplayName)
shot = full %>% na.omit() %>% filter(typeValue==15,typeValue==16)
shot = full %>% na.omit() %>% filter(typeValue==15 | typeValue==16)
View(shot)
View(tomap)
# map_scrape.r
# WhoScored : copy(JSON.stringify(matchCentreData));
library(tidyverse)
library(hrbrthemes)
library(jsonlite)
data = jsonlite::fromJSON("test.json")
event = data.frame(id=data$events$id,eventId=data$events$eventId,minute=data$events$minute,second=data$events$second,teamId=data$events$teamId,playerId=data$events$playerId,x=data$events$x,y=data$events$y,typeValue=data$events$type$value,typeDisplayName=data$events$type$displayName,period=data$events$period$value,isTouch=data$events$isTouch,outcome=data$events$outcomeType$value)
player= data$playerIdNameDictionary %>% t %>% as.data.frame() %>% t %>% as.data.frame() %>% tibble::rownames_to_column() %>% select(playerName=V1,playerId=rowname) %>% mutate(playerId=as.numeric(playerId),playerName=unlist(playerName))
home_lineup = data$home$formations$playerIds[[1]] %>% as.data.frame() %>% select(.,playerId=.) %>% slice(1:11)
away_lineup = data$away$formations$playerIds[[1]] %>% as.data.frame() %>% select(.,playerId=.) %>% slice(1:11)
full = left_join(event,player,by=c("playerId"))
pass = full %>% na.omit() %>% filter(typeValue==1) %>% filter(outcome==1)
touch = full %>% na.omit() %>% filter(isTouch==TRUE)
shot = full %>% na.omit() %>% filter(typeValue==15)
tomap = shot %>%
filter(playerId %in% home_lineup$playerId) %>%
group_by(teamId,playerName) %>%
summarise(x_avg=mean(x),y_avg=mean(y),n=n())
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
circle <- circleFun(c(50,50),20,npoints = 100)
g <- ggplot(tomap,aes(x=x_avg,y=y_avg)) +
xlim(0,100) +
ylim(0,100)+
stat_density_2d(aes(fill = ..density..),geom = "tile", contour = FALSE)+
scale_fill_gradient(low="#74c493",high="#00695c")+
geom_rect(aes(xmin = 0, xmax = 100, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 50, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 17, xmax = 0, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 83, xmax = 100, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 6, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 100, xmax = 94, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_path(data=circle,aes(x=x,y=y),colour="white",size=0.5) +
geom_point(aes(size=n),shape = 21, colour = "white", fill = "#00bfa5", stroke = 1) +
geom_text(aes(label=playerName),hjust=0, vjust=-1,colour="black") +
theme_ipsum_rc()+
theme(axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank())+
labs(x="", y="",title="Touchmap \nArsenal away at Stoke City",subtitle="Premier League - 19/08/2017",caption="Dot size : touches - Dot position : average touch position \n \n by Benoit Pimpaud / @Ben8t",color="") +theme(legend.position='none')
g
# map_scrape.r
# WhoScored : copy(JSON.stringify(matchCentreData));
library(tidyverse)
library(hrbrthemes)
library(jsonlite)
data = jsonlite::fromJSON("test.json")
event = data.frame(id=data$events$id,eventId=data$events$eventId,minute=data$events$minute,second=data$events$second,teamId=data$events$teamId,playerId=data$events$playerId,x=data$events$x,y=data$events$y,typeValue=data$events$type$value,typeDisplayName=data$events$type$displayName,period=data$events$period$value,isTouch=data$events$isTouch,outcome=data$events$outcomeType$value)
player= data$playerIdNameDictionary %>% t %>% as.data.frame() %>% t %>% as.data.frame() %>% tibble::rownames_to_column() %>% select(playerName=V1,playerId=rowname) %>% mutate(playerId=as.numeric(playerId),playerName=unlist(playerName))
home_lineup = data$home$formations$playerIds[[1]] %>% as.data.frame() %>% select(.,playerId=.) %>% slice(1:11)
away_lineup = data$away$formations$playerIds[[1]] %>% as.data.frame() %>% select(.,playerId=.) %>% slice(1:11)
full = left_join(event,player,by=c("playerId"))
pass = full %>% na.omit() %>% filter(typeValue==1) %>% filter(outcome==1)
touch = full %>% na.omit() %>% filter(isTouch==TRUE)
shot = full %>% na.omit() %>% filter(typeValue==15 | typeValue==16)
tomap = shot %>%
filter(playerId %in% home_lineup$playerId) %>%
group_by(teamId,playerName) %>%
summarise(x_avg=mean(x),y_avg=mean(y),n=n())
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
circle <- circleFun(c(50,50),20,npoints = 100)
g <- ggplot(tomap,aes(x=x_avg,y=y_avg)) +
xlim(0,100) +
ylim(0,100)+
stat_density_2d(aes(fill = ..density..),geom = "tile", contour = FALSE)+
scale_fill_gradient(low="#74c493",high="#00695c")+
geom_rect(aes(xmin = 0, xmax = 100, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 50, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 17, xmax = 0, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 83, xmax = 100, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 6, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 100, xmax = 94, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_path(data=circle,aes(x=x,y=y),colour="white",size=0.5) +
geom_point(aes(size=n),shape = 21, colour = "white", fill = "#00bfa5", stroke = 1) +
geom_text(aes(label=playerName),hjust=0, vjust=-1,colour="black") +
theme_ipsum_rc()+
theme(axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank())+
labs(x="", y="",title="Touchmap \nArsenal away at Stoke City",subtitle="Premier League - 19/08/2017",caption="Dot size : touches - Dot position : average touch position \n \n by Benoit Pimpaud / @Ben8t",color="") +theme(legend.position='none')
g
View(shot)
View(player)
# map_scrape.r
# WhoScored : copy(JSON.stringify(matchCentreData));
library(tidyverse)
library(hrbrthemes)
library(jsonlite)
# VARIABLE
TEAM = "home"
# Load data
data = jsonlite::fromJSON("test.json")
event = data.frame(id=data$events$id,eventId=data$events$eventId,minute=data$events$minute,second=data$events$second,teamId=data$events$teamId,playerId=data$events$playerId,x=data$events$x,y=data$events$y,typeValue=data$events$type$value,typeDisplayName=data$events$type$displayName,period=data$events$period$value,isTouch=data$events$isTouch,outcome=data$events$outcomeType$value)
player= data$playerIdNameDictionary %>% t %>% as.data.frame() %>% t %>% as.data.frame() %>% tibble::rownames_to_column() %>% select(playerName=V1,playerId=rowname) %>% mutate(playerId=as.numeric(playerId),playerName=unlist(playerName))
# Select team
if(TEAM=="home"){
lineup = data$home$formations$playerIds[[1]] %>% as.data.frame() %>% select(.,playerId=.) %>% slice(1:11)
}else if(TEAM=="away"){
lineup = data$away$formations$playerIds[[1]] %>% as.data.frame() %>% select(.,playerId=.) %>% slice(1:11)
}
# Bind all data
full = left_join(event,player,by=c("playerId"))
# Create dataset for each type
pass = full %>% na.omit() %>% filter(typeValue==1) %>% filter(outcome==1)
touch = full %>% na.omit() %>% filter(isTouch==TRUE)
shot = full %>% na.omit() %>% filter(typeValue==15 | typeValue==16)
# Create dataset for ggplot2
tomap_touch = touch %>%
filter(playerId %in% lineup$playerId) %>%
group_by(teamId,playerName) %>%
summarise(x_avg=mean(x),y_avg=mean(y),n=n())
# fucntion to create circle on center
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
circle <- circleFun(c(50,50),20,npoints = 100)
# Plot
g_shot <- ggplot(tomap_touch,aes(x=x_avg,y=y_avg)) +
xlim(0,100) +
ylim(0,100)+
stat_density_2d(aes(fill = ..density..),geom = "tile", contour = FALSE)+
scale_fill_gradient(low="#74c493",high="#00695c")+
geom_rect(aes(xmin = 0, xmax = 100, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 50, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 17, xmax = 0, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 83, xmax = 100, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 6, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 100, xmax = 94, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_path(data=circle,aes(x=x,y=y),colour="white",size=0.5) +
geom_point(aes(size=n),shape = 21, colour = "white", fill = "#00bfa5", stroke = 1) +
geom_text(aes(label=playerName),hjust=0, vjust=-1,colour="black") +
theme_ipsum_rc()+
theme(axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank())+
labs(x="", y="",title="Touchmap \nArsenal away at Stoke City",subtitle="Premier League - 19/08/2017",caption="Dot size : touches - Dot position : average touch position \n \n by Benoit Pimpaud / @Ben8t",color="") +theme(legend.position='none')
g# map_scrape.r
# WhoScored : copy(JSON.stringify(matchCentreData));
library(tidyverse)
library(hrbrthemes)
library(jsonlite)
# VARIABLE
TEAM = "home"
# Load data
data = jsonlite::fromJSON("test.json")
event = data.frame(id=data$events$id,eventId=data$events$eventId,minute=data$events$minute,second=data$events$second,teamId=data$events$teamId,playerId=data$events$playerId,x=data$events$x,y=data$events$y,typeValue=data$events$type$value,typeDisplayName=data$events$type$displayName,period=data$events$period$value,isTouch=data$events$isTouch,outcome=data$events$outcomeType$value)
player= data$playerIdNameDictionary %>% t %>% as.data.frame() %>% t %>% as.data.frame() %>% tibble::rownames_to_column() %>% select(playerName=V1,playerId=rowname) %>% mutate(playerId=as.numeric(playerId),playerName=unlist(playerName))
# Select team
if(TEAM=="home"){
lineup = data$home$formations$playerIds[[1]] %>% as.data.frame() %>% select(.,playerId=.) %>% slice(1:11)
}else if(TEAM=="away"){
lineup = data$away$formations$playerIds[[1]] %>% as.data.frame() %>% select(.,playerId=.) %>% slice(1:11)
}
# Bind all data
full = left_join(event,player,by=c("playerId"))
# Create dataset for each type
pass = full %>% na.omit() %>% filter(typeValue==1) %>% filter(outcome==1)
touch = full %>% na.omit() %>% filter(isTouch==TRUE)
shot = full %>% na.omit() %>% filter(typeValue==15 | typeValue==16)
# Create dataset for ggplot2
tomap_touch = touch %>%
filter(playerId %in% lineup$playerId) %>%
group_by(teamId,playerName) %>%
summarise(x_avg=mean(x),y_avg=mean(y),n=n())
# fucntion to create circle on center
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
circle <- circleFun(c(50,50),20,npoints = 100)
# Plot
g_touch <- ggplot(tomap_touch,aes(x=x_avg,y=y_avg)) +
xlim(0,100) +
ylim(0,100)+
stat_density_2d(aes(fill = ..density..),geom = "tile", contour = FALSE)+
scale_fill_gradient(low="#74c493",high="#00695c")+
geom_rect(aes(xmin = 0, xmax = 100, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 50, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 17, xmax = 0, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 83, xmax = 100, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 6, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 100, xmax = 94, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_path(data=circle,aes(x=x,y=y),colour="white",size=0.5) +
geom_point(aes(size=n),shape = 21, colour = "white", fill = "#00bfa5", stroke = 1) +
geom_text(aes(label=playerName),hjust=0, vjust=-1,colour="black") +
theme_ipsum_rc()+
theme(axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank())+
labs(x="", y="",title="Touchmap \nArsenal away at Stoke City",subtitle="Premier League - 19/08/2017",caption="Dot size : touches - Dot position : average touch position \n \n by Benoit Pimpaud / @Ben8t",color="") +theme(legend.position='none')
g_touch
# map_scrape.r
# WhoScored : copy(JSON.stringify(matchCentreData));
library(tidyverse)
library(hrbrthemes)
library(jsonlite)
# VARIABLE
TEAM = "away"
# Load data
data = jsonlite::fromJSON("test.json")
event = data.frame(id=data$events$id,eventId=data$events$eventId,minute=data$events$minute,second=data$events$second,teamId=data$events$teamId,playerId=data$events$playerId,x=data$events$x,y=data$events$y,typeValue=data$events$type$value,typeDisplayName=data$events$type$displayName,period=data$events$period$value,isTouch=data$events$isTouch,outcome=data$events$outcomeType$value)
player= data$playerIdNameDictionary %>% t %>% as.data.frame() %>% t %>% as.data.frame() %>% tibble::rownames_to_column() %>% select(playerName=V1,playerId=rowname) %>% mutate(playerId=as.numeric(playerId),playerName=unlist(playerName))
# Select team
if(TEAM=="home"){
lineup = data$home$formations$playerIds[[1]] %>% as.data.frame() %>% select(.,playerId=.) %>% slice(1:11)
}else if(TEAM=="away"){
lineup = data$away$formations$playerIds[[1]] %>% as.data.frame() %>% select(.,playerId=.) %>% slice(1:11)
}
# Bind all data
full = left_join(event,player,by=c("playerId"))
# Create dataset for each type
pass = full %>% na.omit() %>% filter(typeValue==1) %>% filter(outcome==1)
touch = full %>% na.omit() %>% filter(isTouch==TRUE)
shot = full %>% na.omit() %>% filter(typeValue==15 | typeValue==16)
# Create dataset for ggplot2
tomap_touch = touch %>%
filter(playerId %in% lineup$playerId) %>%
group_by(teamId,playerName) %>%
summarise(x_avg=mean(x),y_avg=mean(y),n=n())
# fucntion to create circle on center
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
circle <- circleFun(c(50,50),20,npoints = 100)
# Plot
g_touch <- ggplot(tomap_touch,aes(x=x_avg,y=y_avg)) +
xlim(0,100) +
ylim(0,100)+
stat_density_2d(aes(fill = ..density..),geom = "tile", contour = FALSE)+
scale_fill_gradient(low="#74c493",high="#00695c")+
geom_rect(aes(xmin = 0, xmax = 100, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 50, ymin = 0, ymax = 100), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 17, xmax = 0, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 83, xmax = 100, ymin = 21, ymax = 79), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 0, xmax = 6, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_rect(aes(xmin = 100, xmax = 94, ymin = 36.8, ymax = 63.2), fill = NA, colour = "white", size=0.5) +
geom_path(data=circle,aes(x=x,y=y),colour="white",size=0.5) +
geom_point(aes(size=n),shape = 21, colour = "white", fill = "#00bfa5", stroke = 1) +
geom_text(aes(label=playerName),hjust=0, vjust=-1,colour="black") +
theme_ipsum_rc()+
theme(axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank())+
labs(x="", y="",title="Touchmap \nArsenal away at Stoke City",subtitle="Premier League - 19/08/2017",caption="Dot size : touches - Dot position : average touch position \n \n by Benoit Pimpaud / @Ben8t",color="") +theme(legend.position='none')
g_touch
